// Code generated by MockGen. DO NOT EDIT.
// Source: history_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/Makovey/gophermart/internal/repository/model"
	gomock "github.com/golang/mock/gomock"
)

// MockHistoryServiceRepository is a mock of HistoryServiceRepository interface.
type MockHistoryServiceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockHistoryServiceRepositoryMockRecorder
}

// MockHistoryServiceRepositoryMockRecorder is the mock recorder for MockHistoryServiceRepository.
type MockHistoryServiceRepositoryMockRecorder struct {
	mock *MockHistoryServiceRepository
}

// NewMockHistoryServiceRepository creates a new mock instance.
func NewMockHistoryServiceRepository(ctrl *gomock.Controller) *MockHistoryServiceRepository {
	mock := &MockHistoryServiceRepository{ctrl: ctrl}
	mock.recorder = &MockHistoryServiceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHistoryServiceRepository) EXPECT() *MockHistoryServiceRepositoryMockRecorder {
	return m.recorder
}

// GetUsersHistory mocks base method.
func (m *MockHistoryServiceRepository) GetUsersHistory(ctx context.Context, userID string) ([]model.Withdraw, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsersHistory", ctx, userID)
	ret0, _ := ret[0].([]model.Withdraw)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsersHistory indicates an expected call of GetUsersHistory.
func (mr *MockHistoryServiceRepositoryMockRecorder) GetUsersHistory(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsersHistory", reflect.TypeOf((*MockHistoryServiceRepository)(nil).GetUsersHistory), ctx, userID)
}
