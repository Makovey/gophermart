// Code generated by MockGen. DO NOT EDIT.
// Source: user_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/Makovey/gophermart/internal/repository/model"
	gomock "github.com/golang/mock/gomock"
)

// MockUserServiceRepository is a mock of UserServiceRepository interface.
type MockUserServiceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserServiceRepositoryMockRecorder
}

// MockUserServiceRepositoryMockRecorder is the mock recorder for MockUserServiceRepository.
type MockUserServiceRepositoryMockRecorder struct {
	mock *MockUserServiceRepository
}

// NewMockUserServiceRepository creates a new mock instance.
func NewMockUserServiceRepository(ctrl *gomock.Controller) *MockUserServiceRepository {
	mock := &MockUserServiceRepository{ctrl: ctrl}
	mock.recorder = &MockUserServiceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserServiceRepository) EXPECT() *MockUserServiceRepositoryMockRecorder {
	return m.recorder
}

// LoginUser mocks base method.
func (m *MockUserServiceRepository) LoginUser(ctx context.Context, login string) (model.RegisterUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoginUser", ctx, login)
	ret0, _ := ret[0].(model.RegisterUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoginUser indicates an expected call of LoginUser.
func (mr *MockUserServiceRepositoryMockRecorder) LoginUser(ctx, login interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoginUser", reflect.TypeOf((*MockUserServiceRepository)(nil).LoginUser), ctx, login)
}

// RegisterNewUser mocks base method.
func (m *MockUserServiceRepository) RegisterNewUser(ctx context.Context, user model.RegisterUser) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterNewUser", ctx, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterNewUser indicates an expected call of RegisterNewUser.
func (mr *MockUserServiceRepositoryMockRecorder) RegisterNewUser(ctx, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterNewUser", reflect.TypeOf((*MockUserServiceRepository)(nil).RegisterNewUser), ctx, user)
}
