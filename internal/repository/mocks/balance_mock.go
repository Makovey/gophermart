// Code generated by MockGen. DO NOT EDIT.
// Source: balance.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/Makovey/gophermart/internal/repository/model"
	gomock "github.com/golang/mock/gomock"
	decimal "github.com/shopspring/decimal"
)

// MockBalancesRepository is a mock of BalancesRepository interface.
type MockBalancesRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBalancesRepositoryMockRecorder
}

// MockBalancesRepositoryMockRecorder is the mock recorder for MockBalancesRepository.
type MockBalancesRepositoryMockRecorder struct {
	mock *MockBalancesRepository
}

// NewMockBalancesRepository creates a new mock instance.
func NewMockBalancesRepository(ctrl *gomock.Controller) *MockBalancesRepository {
	mock := &MockBalancesRepository{ctrl: ctrl}
	mock.recorder = &MockBalancesRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalancesRepository) EXPECT() *MockBalancesRepositoryMockRecorder {
	return m.recorder
}

// DecreaseUsersBalance mocks base method.
func (m *MockBalancesRepository) DecreaseUsersBalance(ctx context.Context, userID string, withdraw decimal.Decimal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DecreaseUsersBalance", ctx, userID, withdraw)
	ret0, _ := ret[0].(error)
	return ret0
}

// DecreaseUsersBalance indicates an expected call of DecreaseUsersBalance.
func (mr *MockBalancesRepositoryMockRecorder) DecreaseUsersBalance(ctx, userID, withdraw interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DecreaseUsersBalance", reflect.TypeOf((*MockBalancesRepository)(nil).DecreaseUsersBalance), ctx, userID, withdraw)
}

// GetUsersBalance mocks base method.
func (m *MockBalancesRepository) GetUsersBalance(ctx context.Context, userID string) (model.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsersBalance", ctx, userID)
	ret0, _ := ret[0].(model.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsersBalance indicates an expected call of GetUsersBalance.
func (mr *MockBalancesRepositoryMockRecorder) GetUsersBalance(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsersBalance", reflect.TypeOf((*MockBalancesRepository)(nil).GetUsersBalance), ctx, userID)
}

// RecordUsersWithdraw mocks base method.
func (m *MockBalancesRepository) RecordUsersWithdraw(ctx context.Context, userID, orderID string, amount decimal.Decimal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RecordUsersWithdraw", ctx, userID, orderID, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// RecordUsersWithdraw indicates an expected call of RecordUsersWithdraw.
func (mr *MockBalancesRepositoryMockRecorder) RecordUsersWithdraw(ctx, userID, orderID, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecordUsersWithdraw", reflect.TypeOf((*MockBalancesRepository)(nil).RecordUsersWithdraw), ctx, userID, orderID, amount)
}
