// Code generated by MockGen. DO NOT EDIT.
// Source: accrual.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/Makovey/gophermart/internal/repository/model"
	gomock "github.com/golang/mock/gomock"
	decimal "github.com/shopspring/decimal"
)

// MockWorkerRepository is a mock of WorkerRepository interface.
type MockWorkerRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWorkerRepositoryMockRecorder
}

// MockWorkerRepositoryMockRecorder is the mock recorder for MockWorkerRepository.
type MockWorkerRepositoryMockRecorder struct {
	mock *MockWorkerRepository
}

// NewMockWorkerRepository creates a new mock instance.
func NewMockWorkerRepository(ctrl *gomock.Controller) *MockWorkerRepository {
	mock := &MockWorkerRepository{ctrl: ctrl}
	mock.recorder = &MockWorkerRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkerRepository) EXPECT() *MockWorkerRepositoryMockRecorder {
	return m.recorder
}

// FetchNewOrdersToChan mocks base method.
func (m *MockWorkerRepository) FetchNewOrdersToChan(ctx context.Context, ordersCh chan<- model.Order) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchNewOrdersToChan", ctx, ordersCh)
	ret0, _ := ret[0].(error)
	return ret0
}

// FetchNewOrdersToChan indicates an expected call of FetchNewOrdersToChan.
func (mr *MockWorkerRepositoryMockRecorder) FetchNewOrdersToChan(ctx, ordersCh interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchNewOrdersToChan", reflect.TypeOf((*MockWorkerRepository)(nil).FetchNewOrdersToChan), ctx, ordersCh)
}

// IncreaseUsersBalance mocks base method.
func (m *MockWorkerRepository) IncreaseUsersBalance(ctx context.Context, userID string, reward decimal.Decimal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncreaseUsersBalance", ctx, userID, reward)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncreaseUsersBalance indicates an expected call of IncreaseUsersBalance.
func (mr *MockWorkerRepositoryMockRecorder) IncreaseUsersBalance(ctx, userID, reward interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreaseUsersBalance", reflect.TypeOf((*MockWorkerRepository)(nil).IncreaseUsersBalance), ctx, userID, reward)
}

// UpdateOrder mocks base method.
func (m *MockWorkerRepository) UpdateOrder(ctx context.Context, status model.OrderStatus) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrder", ctx, status)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateOrder indicates an expected call of UpdateOrder.
func (mr *MockWorkerRepositoryMockRecorder) UpdateOrder(ctx, status interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrder", reflect.TypeOf((*MockWorkerRepository)(nil).UpdateOrder), ctx, status)
}
